#########################
## KEY BINDINGS
#########################
# Change prefix to ctrl-a
unbind C-b
set -g prefix C-a
bind C-a send-prefix


# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

set -g status-keys vi

# Reload tmux config
unbind r
bind r \
	source-file ~/.tmux.conf \;\
	display 'Reloaded tmux config'

# Use m to toggle mouse mode
unbind m
bind m setw mouse

bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -T root C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -T root C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -T root C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -T root C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
##bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Go to the window to the right
bind-key -r -T prefix l next-window
bind-key -r -T prefix C-l next-window

# Go to the window to the left
bind-key -r -T prefix h next-window
bind-key -r -T prefix C-h previous-window

## Move to last active window
bind-key -T prefix p last-window

# Zoom without prefix
bind-key -n C-z resize-pane -Z

# Shift arrow to switch windows
#bind -n M-h if-shell "$is_vim" "send-keys M-h" "previous-window"
#bind -n M-l if-shell "$is_vim" "send-keys M-l" "next-window"


# To make tmux-yank to work
show-options -g -s set-clipboard

# Setup vi-style copy/paste
set-window-option -g mode-keys vi
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

#########################
## Settings
#########################
# Enable focus events
set-option -g focus-events on
# force tmux to use utf-8
setw -gq utf8 on
# Force utf-8
set -gq status-utf8 on

# Set the default terminal mode to 256color mode
set -g default-terminal screen-256color-bce

# 0 is too far from ` ;)
set -g base-index 1
setw -g monitor-activity on
# Vim mode
# No delay for escape key press
set -sg escape-time 0

set -g history-limit 10000

# Statusline colors
set -g status-style fg=white,bg=default,bright
# set -g status-attr bright

# Left Status line
set -g status-justify left
set -g status on
set -g status-interval 1
set -g status-left-length 30
set -g status-left '#[fg=white]%H:%M#[default] #[fg=green](#S) '

#Right statusline
set -g status-right-length 200
set -g status-right '#[fg=white]k8s:[#(kubectl config current-context)]#[fg=white] gcloud:[#(gcloud config get-value project)] #[fg=white] git:[#(git rev-parse --abbrev-ref HEAD 2>/dev/null)]'


# Windowlist
# set the color of the window list
set-window-option -g window-status-style fg=white,bg=default,dim
# set colors for the active window
set-window-option -g window-status-current-style fg=white,bg=default,bright


# command/message line colors
set -g message-style fg=white,bg=black,bright



#########################
## PACKAGE MANAGER
#########################
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'




# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
